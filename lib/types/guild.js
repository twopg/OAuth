"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const permissionConstants = {
    1: 'CREATE_INSTANT_INVITE',
    2: 'KICK_MEMBERS',
    4: 'BAN_MEMBERS',
    8: 'ADMINISTRATOR',
    0x10: 'MANAGE_CHANNELS',
    0x20: 'MANAGE_GUILD',
    0x40: 'ADD_REACTION',
    0x80: 'VIEW_AUDIT_LOG',
    0x400: 'VIEW_CHANNEL',
    0x800: 'SEND_MESSAGES',
    0x1000: 'SEND_TTS_MESSAGES',
    0x2000: 'MANAGE_MESSAGES',
    0x4000: 'EMBED_LINKS',
    0x8000: 'ATTACH_FILES',
    0x10000: 'READ_MESSAGES_HISTORY',
    0x20000: 'MENTION_EVERYONE',
    0x40000: 'USE_EXTERNAL_EMOJIS',
    0x100000: 'CONNECT',
    0x200000: 'SPEAK',
    0x400000: 'MUTE_MEMBERS',
    0x800000: 'MANAGE_NICKNAMES',
    0x1000000: 'MANAGE_ROLES',
    0x2000000: 'MANAGE_WEBHOOKS',
    0x4000000: 'MANAGE_EMOJIS'
};
class Guild {
    constructor({ id, name, icon, features = [], owner = false, permissions = 0 }) {
        this.id = id;
        this.name = name;
        this.iconHash = icon;
        this.features = features;
        this.isOwner = owner;
        this.permissions = this.parsePermissions(permissions);
    }
    /** The timestamp of creation of the user's account. */
    get createdTimestamp() {
        return parseInt((BigInt('0b' + parseInt(this.id).toString(2)) >> 22n).toString()) + 1420070400000;
    }
    /** The time of creation of the user's account. */
    get createdAt() {
        return new Date(this.createdTimestamp);
    }
    parsePermissions(perms) {
        let p = [];
        for (let c in permissionConstants) {
            let x = parseInt(c);
            if ((x & perms) === x)
                p.push(permissionConstants[x]);
        }
        return p;
    }
    /**
     * Returns a url to the guild icon.
     * @param size The size of the icon in pixels. (Defaults to 512)
     */
    iconUrl(size = 512) {
        return this.iconHash
            ? `https://cdn.discordapp.com/icons/${this.id}/${this.iconHash}.${this.iconHash.startsWith('a_') ? 'gif' : 'png'}?size=${size}`
            : 'https://i.imgur.com/LvroChs.png';
    }
}
exports.default = Guild;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VpbGQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHlwZXMvZ3VpbGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxNQUFNLG1CQUFtQixHQUFHO0lBQzFCLENBQUMsRUFBRSx1QkFBdUI7SUFDMUIsQ0FBQyxFQUFFLGNBQWM7SUFDakIsQ0FBQyxFQUFFLGFBQWE7SUFDaEIsQ0FBQyxFQUFFLGVBQWU7SUFDbEIsSUFBSSxFQUFFLGlCQUFpQjtJQUN2QixJQUFJLEVBQUUsY0FBYztJQUNwQixJQUFJLEVBQUUsY0FBYztJQUNwQixJQUFJLEVBQUUsZ0JBQWdCO0lBQ3RCLEtBQUssRUFBRSxjQUFjO0lBQ3JCLEtBQUssRUFBRSxlQUFlO0lBQ3RCLE1BQU0sRUFBRSxtQkFBbUI7SUFDM0IsTUFBTSxFQUFFLGlCQUFpQjtJQUN6QixNQUFNLEVBQUUsYUFBYTtJQUNyQixNQUFNLEVBQUUsY0FBYztJQUN0QixPQUFPLEVBQUUsdUJBQXVCO0lBQ2hDLE9BQU8sRUFBRSxrQkFBa0I7SUFDM0IsT0FBTyxFQUFFLHFCQUFxQjtJQUM5QixRQUFRLEVBQUUsU0FBUztJQUNuQixRQUFRLEVBQUUsT0FBTztJQUNqQixRQUFRLEVBQUUsY0FBYztJQUN4QixRQUFRLEVBQUUsa0JBQWtCO0lBQzVCLFNBQVMsRUFBRSxjQUFjO0lBQ3pCLFNBQVMsRUFBRSxpQkFBaUI7SUFDNUIsU0FBUyxFQUFFLGVBQWU7Q0FDM0IsQ0FBQztBQUVGLE1BQXFCLEtBQUs7SUF1QnhCLFlBQVksRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLEdBQUcsRUFBRSxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRTtRQUMzRSxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUNiLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFoQkQsdURBQXVEO0lBQ3ZELElBQUksZ0JBQWdCO1FBQ2xCLE9BQU8sUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsYUFBYSxDQUFDO0lBQ3BHLENBQUM7SUFDRCxrREFBa0Q7SUFDbEQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBV08sZ0JBQWdCLENBQUMsS0FBYTtRQUNwQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWCxLQUFLLElBQUksQ0FBQyxJQUFJLG1CQUFtQixFQUFFO1lBQ2pDLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7Z0JBQ25CLENBQUMsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNsQztRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVEOzs7T0FHRztJQUNILE9BQU8sQ0FBQyxJQUFJLEdBQUcsR0FBRztRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRO1lBQ2xCLENBQUMsQ0FBQyxvQ0FBb0MsSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUMxRCxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLFNBQVMsSUFBSSxFQUFFO1lBQ2pFLENBQUMsQ0FBQyxpQ0FBaUMsQ0FBQztJQUN4QyxDQUFDO0NBQ0Y7QUFwREQsd0JBb0RDIn0=